/*
 * CYANCORE LICENSE
 * Copyrights (C) 2019, Cyancore Team
 *
 * File Name		: sections.ld.sx
 * Description		: This file contains memory layout for the
 *			  cyancore framework
 * Primary Author	: Akash Kollipara [akashkollipara@gmail.com]
 * Organisation		: Cyancore Core-Team
 */

#include <plat_mem.h>

#ifndef L_MEM_START
#define L_MEM_START	0
#endif

MEMORY
{
	/* VM Addresses */
	vma_imem	: ORIGIN = V_IMEM_START, LENGTH = IMEM_LENGTH
	vma_dmem	: ORIGIN = V_DMEM_START, LENGTH = DMEM_LENGTH

	/* LM Addresses */
	lma_mem		: ORIGIN = L_MEM_START, LENGTH = IMEM_LENGTH
}

SECTIONS
{
	.text :
	{
		. = ALIGN(ALIGN_BOUND);
		*(.archvectors)
		KEEP(*(.archvectors))
		*(.platvectors)
		KEEP(*(.platvectors))
		. = ALIGN(ALIGN_BOUND);
		*(.text)
		*(.text.*)
		KEEP(*(.text))
	} > vma_imem AT > lma_mem

	PROVIDE(_data_start = LOADADDR(.data));
	.data :
	{
		. = ALIGN(ALIGN_BOUND);
		PROVIDE(__local_data_start = .);
		*(.version)
		KEEP(*(.version))
		*(.rodata)
		*(.rodata.*)
		KEEP(*(.rodata))
		*(.data)
		*(.data.*)
		KEEP(*(.data))
		PROVIDE(_driver_table_start = .);
		*(.driver)
		KEEP(*(.driver))
		PROVIDE(_driver_table_end = .);
		PROVIDE(__local_data_end = .);
		PROVIDE(_data_size = __local_data_end - __local_data_start);
		. = ALIGN(ALIGN_BOUND);
		*(.stack)
		KEEP(*(.stack))
	} > vma_dmem AT > lma_mem

	.bss :
	{
		. = ALIGN(ALIGN_BOUND);
		. = . + ALIGN_BOUND;
		PROVIDE(_bss_start = .);
		PROVIDE(_gptr = .);
		*(.bss)
		*(.bss.*)
		KEEP(*(.bss))
		*(.sbss)
		*(.sbss.*)
		KEEP(*(.sbss))
		*(COMMON)
		PROVIDE(_bss_end = .);
	} > vma_dmem

	PROVIDE(_bss_size = SIZEOF(.bss));
}
